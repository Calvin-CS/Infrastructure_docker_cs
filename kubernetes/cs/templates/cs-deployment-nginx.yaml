apiVersion: apps/v1
kind: Deployment
metadata:
  name: cs-{{ default "staging" .Release.Namespace }}-nginx
  labels:
    tier: backend
spec:
  {{ if ne .Release.Namespace "production" }}replicas: 1{{- else }}replicas: 2{{- end }}
  selector:
    matchLabels:
      app: cs-{{ default "staging" .Release.Namespace }}-nginx
      tier: backend
  template:
    metadata:
      labels:
        app: cs-{{ default "staging" .Release.Namespace }}-nginx
        tier: backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cs-configmap.yaml") . | sha256sum }}
        releaseTime: {{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC"| quote }}
    spec:
      volumes:
      - name: webroot
        nfs:
          path: /export/csweb/html
          server: cswebnfs-int.k8s.cs.calvin.edu
      - name: config
        configMap:
          name: cs-{{ default "staging" .Release.Namespace }}-nginx-config
          items:
          - key: config
            path: site.conf
      - name: secretvolume
        secret:
          secretName: cs-htpasswd
      containers:
      - name: cs-{{ default "staging" .Release.Namespace }}-nginx
        image: nginx:stable
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /css/readme.txt
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /css/readme.txt
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 5
        resources:
          requests:
            memory: "200Mi"
            cpu: "100m" # 0.1 CPU
          limits:
            memory: "325Mi"
            cpu: "250m" # 0.25 CPU
        volumeMounts:
        - mountPath: /var/www/html
          name: webroot
          readOnly: true
        - mountPath: /etc/nginx/conf.d
          name: config
          readOnly: true
        - mountPath: /etc/secrets
          name: secretvolume
          readOnly: true
---
{{ if eq .Release.Namespace "production" }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cs-nginx-{{ default "staging" .Release.Namespace }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cs-{{ default "staging" .Release.Namespace }}-nginx
  minReplicas: 2
  maxReplicas: 10
  #targetCPUUtilizationPercentage: 80
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 85
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
{{- end }}
